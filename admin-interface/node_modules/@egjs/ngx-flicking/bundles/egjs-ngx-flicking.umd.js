(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@egjs/flicking'), require('@angular/core'), require('@angular/common'), require('@egjs/list-differ')) :
    typeof define === 'function' && define.amd ? define('@egjs/ngx-flicking', ['exports', '@egjs/flicking', '@angular/core', '@angular/common', '@egjs/list-differ'], factory) :
    (global = global || self, factory((global.egjs = global.egjs || {}, global.egjs['ngx-flicking'] = {}), global.Flicking, global.ng.core, global.ng.common, global.eg.ListDiffer));
}(this, (function (exports, VanillaFlicking, core, common, ListDiffer) { 'use strict';

    var VanillaFlicking__default = 'default' in VanillaFlicking ? VanillaFlicking['default'] : VanillaFlicking;
    ListDiffer = ListDiffer && Object.prototype.hasOwnProperty.call(ListDiffer, 'default') ? ListDiffer['default'] : ListDiffer;

    /*
     * Copyright (c) 2015 NAVER Corp.
     * egjs projects are licensed under the MIT license
     */
    var NgxFlickingPanel = /** @class */ (function () {
        function NgxFlickingPanel(_elementref, _renderer) {
            this._elementref = _elementref;
            this._renderer = _renderer;
            this._rendered = true;
        }
        Object.defineProperty(NgxFlickingPanel.prototype, "nativeElement", {
            get: function () { return this._elementref.nativeElement; },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(NgxFlickingPanel.prototype, "rendered", {
            get: function () { return this._rendered; },
            enumerable: false,
            configurable: true
        });
        NgxFlickingPanel.prototype.show = function (flicking) {
            this._rendered = true;
            var el = this.nativeElement;
            var cameraEl = flicking.camera.element;
            if (el.parentElement !== cameraEl) {
                this._renderer.appendChild(cameraEl, el);
            }
        };
        NgxFlickingPanel.prototype.hide = function (flicking) {
            this._rendered = false;
            var el = this.nativeElement;
            var cameraEl = flicking.camera.element;
            if (el.parentElement === cameraEl) {
                this._renderer.removeChild(cameraEl, el);
            }
        };
        return NgxFlickingPanel;
    }());
    NgxFlickingPanel.decorators = [
        { type: core.Directive, args: [{
                    selector: "[flicking-panel], [FlickingPanel]"
                },] }
    ];
    NgxFlickingPanel.ctorParameters = function () { return [
        { type: core.ElementRef },
        { type: core.Renderer2 }
    ]; };

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b)
                if (Object.prototype.hasOwnProperty.call(b, p))
                    d[p] = b[p]; };
        return extendStatics(d, b);
    };
    function __extends(d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }
    var __assign = function () {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s)
                    if (Object.prototype.hasOwnProperty.call(s, p))
                        t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };
    function __rest(s, e) {
        var t = {};
        for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
                t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }
    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
            r = Reflect.decorate(decorators, target, key, desc);
        else
            for (var i = decorators.length - 1; i >= 0; i--)
                if (d = decorators[i])
                    r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }
    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); };
    }
    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
            return Reflect.metadata(metadataKey, metadataValue);
    }
    function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try {
                step(generator.next(value));
            }
            catch (e) {
                reject(e);
            } }
            function rejected(value) { try {
                step(generator["throw"](value));
            }
            catch (e) {
                reject(e);
            } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }
    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function () { if (t[0] & 1)
                throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function () { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f)
                throw new TypeError("Generator is already executing.");
            while (_)
                try {
                    if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
                        return t;
                    if (y = 0, t)
                        op = [op[0] & 2, t.value];
                    switch (op[0]) {
                        case 0:
                        case 1:
                            t = op;
                            break;
                        case 4:
                            _.label++;
                            return { value: op[1], done: false };
                        case 5:
                            _.label++;
                            y = op[1];
                            op = [0];
                            continue;
                        case 7:
                            op = _.ops.pop();
                            _.trys.pop();
                            continue;
                        default:
                            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                                _ = 0;
                                continue;
                            }
                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {
                                _.label = op[1];
                                break;
                            }
                            if (op[0] === 6 && _.label < t[1]) {
                                _.label = t[1];
                                t = op;
                                break;
                            }
                            if (t && _.label < t[2]) {
                                _.label = t[2];
                                _.ops.push(op);
                                break;
                            }
                            if (t[2])
                                _.ops.pop();
                            _.trys.pop();
                            continue;
                    }
                    op = body.call(thisArg, _);
                }
                catch (e) {
                    op = [6, e];
                    y = 0;
                }
                finally {
                    f = t = 0;
                }
            if (op[0] & 5)
                throw op[1];
            return { value: op[0] ? op[1] : void 0, done: true };
        }
    }
    var __createBinding = Object.create ? (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        Object.defineProperty(o, k2, { enumerable: true, get: function () { return m[k]; } });
    }) : (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        o[k2] = m[k];
    });
    function __exportStar(m, o) {
        for (var p in m)
            if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p))
                __createBinding(o, m, p);
    }
    function __values(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m)
            return m.call(o);
        if (o && typeof o.length === "number")
            return {
                next: function () {
                    if (o && i >= o.length)
                        o = void 0;
                    return { value: o && o[i++], done: !o };
                }
            };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }
    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m)
            return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
                ar.push(r.value);
        }
        catch (error) {
            e = { error: error };
        }
        finally {
            try {
                if (r && !r.done && (m = i["return"]))
                    m.call(i);
            }
            finally {
                if (e)
                    throw e.error;
            }
        }
        return ar;
    }
    /** @deprecated */
    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }
    /** @deprecated */
    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++)
            s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    }
    function __spreadArray(to, from, pack) {
        if (pack || arguments.length === 2)
            for (var i = 0, l = from.length, ar; i < l; i++) {
                if (ar || !(i in from)) {
                    if (!ar)
                        ar = Array.prototype.slice.call(from, 0, i);
                    ar[i] = from[i];
                }
            }
        return to.concat(ar || Array.prototype.slice.call(from));
    }
    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }
    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n])
            i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try {
            step(g[n](v));
        }
        catch (e) {
            settle(q[0][3], e);
        } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length)
            resume(q[0][0], q[0][1]); }
    }
    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
    }
    function __asyncValues(o) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function (v) { resolve({ value: v, done: d }); }, reject); }
    }
    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) {
            Object.defineProperty(cooked, "raw", { value: raw });
        }
        else {
            cooked.raw = raw;
        }
        return cooked;
    }
    ;
    var __setModuleDefault = Object.create ? (function (o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function (o, v) {
        o["default"] = v;
    };
    function __importStar(mod) {
        if (mod && mod.__esModule)
            return mod;
        var result = {};
        if (mod != null)
            for (var k in mod)
                if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
                    __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    }
    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }
    function __classPrivateFieldGet(receiver, state, kind, f) {
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a getter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
    }
    function __classPrivateFieldSet(receiver, state, value, kind, f) {
        if (kind === "m")
            throw new TypeError("Private method is not writable");
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a setter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
    }

    var ɵ0 = function (key) { return VanillaFlicking.EVENTS[key]; };
    var EVENT_NAMES = Object.keys(VanillaFlicking.EVENTS).map(ɵ0);

    var FlickingInterface = /** @class */ (function () {
        function FlickingInterface() {
        }
        return FlickingInterface;
    }());
    __decorate([
        VanillaFlicking.withFlickingMethods,
        __metadata("design:type", VanillaFlicking__default)
    ], FlickingInterface.prototype, "_vanillaFlicking", void 0);

    var NgxRenderer = /** @class */ (function (_super) {
        __extends(NgxRenderer, _super);
        function NgxRenderer(options) {
            var _this = _super.call(this, options) || this;
            _this._ngxFlicking = options.ngxFlicking;
            _this._ngxRenderer = options.ngxRenderer;
            return _this;
        }
        // eslint-disable-next-line @typescript-eslint/require-await
        NgxRenderer.prototype.render = function () {
            return __awaiter(this, void 0, void 0, function () {
                var flicking, strategy;
                return __generator(this, function (_a) {
                    flicking = VanillaFlicking.getFlickingAttached(this._flicking);
                    strategy = this._strategy;
                    strategy.updateRenderingPanels(flicking);
                    strategy.renderPanels(flicking);
                    this._resetPanelElementOrder();
                    return [2 /*return*/];
                });
            });
        };
        NgxRenderer.prototype._collectPanels = function () {
            var flicking = VanillaFlicking.getFlickingAttached(this._flicking);
            var children = this._ngxFlicking.ngxPanels.toArray();
            this._panels = this._strategy.collectPanels(flicking, children);
        };
        NgxRenderer.prototype._createPanel = function (externalComponent, options) {
            return this._strategy.createPanel(externalComponent, options);
        };
        NgxRenderer.prototype._resetPanelElementOrder = function () {
            var flicking = VanillaFlicking.getFlickingAttached(this._flicking);
            var renderer = this._ngxRenderer;
            var cameraEl = flicking.camera.element;
            // We're using reversed panels here as last panel should be the last element of camera element
            var reversedElements = this._strategy
                .getRenderingElementsByOrder(flicking)
                .reverse();
            reversedElements.forEach(function (el, idx) {
                var nextEl = reversedElements[idx - 1] ? reversedElements[idx - 1] : null;
                if (el.nextElementSibling !== nextEl) {
                    renderer.insertBefore(cameraEl, el, nextEl);
                }
            });
        };
        return NgxRenderer;
    }(VanillaFlicking.ExternalRenderer));

    var NgxElementProvider = /** @class */ (function () {
        function NgxElementProvider(el) {
            this._el = el;
        }
        Object.defineProperty(NgxElementProvider.prototype, "element", {
            get: function () { return this._el.nativeElement; },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(NgxElementProvider.prototype, "rendered", {
            get: function () { return this._el.rendered; },
            enumerable: false,
            configurable: true
        });
        NgxElementProvider.prototype.show = function (flicking) {
            this._el.show(flicking);
        };
        NgxElementProvider.prototype.hide = function (flicking) {
            this._el.hide(flicking);
        };
        return NgxElementProvider;
    }());

    var NgxFlickingComponent = /** @class */ (function (_super) {
        __extends(NgxFlickingComponent, _super);
        function NgxFlickingComponent(elRef, renderer, platformId) {
            var _this = _super.call(this) || this;
            _this.options = {};
            _this.plugins = [];
            _this.hideBeforeInit = false;
            _this._pluginsDiffer = new ListDiffer();
            _this._elementDiffer = null;
            _this._elRef = elRef;
            _this._ngxRenderer = renderer;
            _this._platformId = platformId;
            _this._vanillaFlicking = null;
            EVENT_NAMES.forEach(function (evtName) {
                _this[evtName] = new core.EventEmitter();
            });
            return _this;
        }
        Object.defineProperty(NgxFlickingComponent.prototype, "isVertical", {
            get: function () {
                return this.options.horizontal === false;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(NgxFlickingComponent.prototype, "isHiddenBeforeInit", {
            get: function () {
                var initialized = this._vanillaFlicking && this._vanillaFlicking.initialized;
                return this.hideBeforeInit && !initialized;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(NgxFlickingComponent.prototype, "cameraStyleBeforeInit", {
            get: function () {
                var initialized = this._vanillaFlicking && this._vanillaFlicking.initialized;
                return !initialized && this.firstPanelSize
                    ? { transform: VanillaFlicking.getDefaultCameraTransform(this.options.align, this.options.horizontal, this.firstPanelSize) }
                    : {};
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(NgxFlickingComponent.prototype, "ngxPanels", {
            get: function () { return this._ngxPanels; },
            enumerable: false,
            configurable: true
        });
        NgxFlickingComponent.prototype.ngAfterViewInit = function () {
            var _this = this;
            if (!common.isPlatformBrowser(this._platformId))
                return;
            var options = this.options;
            var viewportEl = this._elRef.nativeElement;
            var virtual = options.virtual && options.panelsPerView > 0;
            var rendererOptions = {
                ngxFlicking: this,
                ngxRenderer: this._ngxRenderer,
                strategy: virtual
                    ? new VanillaFlicking.VirtualRenderingStrategy()
                    : new VanillaFlicking.NormalRenderingStrategy({
                        providerCtor: NgxElementProvider,
                        panelCtor: VanillaFlicking.ExternalPanel
                    })
            };
            if (virtual) {
                this._initVirtualElements();
            }
            // This prevents mousemove to call ngDoCheck & noAfterContentChecked everytime
            var flicking = new VanillaFlicking__default(viewportEl, Object.assign(Object.assign({}, this.options), { renderExternal: {
                    renderer: NgxRenderer,
                    rendererOptions: rendererOptions
                } }));
            this._vanillaFlicking = flicking;
            var elementDiffer = new ListDiffer(this._ngxPanels.toArray());
            this._elementDiffer = elementDiffer;
            this._bindEvents();
            this._checkPlugins();
            if (this.status) {
                flicking.setStatus(this.status);
            }
            this._ngxPanels.changes.subscribe(function () {
                var panels = _this._ngxPanels.toArray();
                var diffResult = elementDiffer.update(panels);
                // eslint-disable-next-line @typescript-eslint/no-unused-vars
                VanillaFlicking.sync(flicking, diffResult, __spread(diffResult.maintained.map(function (_b) {
                    var _c = __read(_b, 2), _ = _c[0], idx = _c[1];
                    return diffResult.list[idx];
                }), diffResult.added.map(function (idx) { return diffResult.list[idx]; })));
            });
        };
        NgxFlickingComponent.prototype.ngOnDestroy = function () {
            if (!this._vanillaFlicking)
                return;
            this._vanillaFlicking.destroy();
        };
        NgxFlickingComponent.prototype.ngOnChanges = function () {
            var flicking = this._vanillaFlicking;
            if (!flicking)
                return;
            void flicking.renderer.forceRenderAllPanels();
            this._checkPlugins();
        };
        NgxFlickingComponent.prototype._bindEvents = function () {
            var _this = this;
            var flicking = this._vanillaFlicking;
            EVENT_NAMES.forEach(function (evtName) {
                flicking.on(evtName, function (e) {
                    // Style guide: Event - https://angular.io/guide/styleguide#dont-prefix-output-properties
                    var emitter = _this[evtName];
                    e.currentTarget = _this;
                    if (emitter) {
                        emitter.emit(e);
                    }
                });
            });
        };
        NgxFlickingComponent.prototype._checkPlugins = function () {
            var flicking = this._vanillaFlicking;
            if (!flicking)
                return;
            var _b = this._pluginsDiffer.update(this.plugins), list = _b.list, added = _b.added, removed = _b.removed, prevList = _b.prevList;
            flicking.addPlugins.apply(flicking, __spread(added.map(function (index) { return list[index]; })));
            flicking.removePlugins.apply(flicking, __spread(removed.map(function (index) { return prevList[index]; })));
        };
        NgxFlickingComponent.prototype._initVirtualElements = function () {
            var options = this.options;
            var renderer = this._ngxRenderer;
            var cameraElement = this._elRef.nativeElement.firstElementChild;
            var panelsPerView = options.panelsPerView;
            var virtual = options.virtual;
            var fragment = document.createDocumentFragment();
            var newElements = VanillaFlicking.range(panelsPerView + 1).map(function (idx) {
                var _a;
                var panelEl = renderer.createElement("div");
                panelEl.className = (_a = virtual.panelClass) !== null && _a !== void 0 ? _a : VanillaFlicking.CLASS.DEFAULT_VIRTUAL;
                panelEl.dataset.elementIndex = idx.toString();
                return panelEl;
            });
            newElements.forEach(function (el) {
                fragment.appendChild(el);
            });
            renderer.appendChild(cameraElement, fragment);
        };
        return NgxFlickingComponent;
    }(FlickingInterface));
    NgxFlickingComponent.decorators = [
        { type: core.Component, args: [{
                    selector: "ngx-flicking, [NgxFlicking]",
                    template: "\n    <div class=\"flicking-camera\" [ngStyle]=\"cameraStyleBeforeInit\">\n      <ng-content></ng-content>\n    </div>\n    <ng-content select=\"[in-viewport]\"></ng-content>",
                    host: {
                        class: "flicking-viewport",
                        style: "display: block;"
                    },
                    encapsulation: core.ViewEncapsulation.None,
                    styles: [".flicking-viewport{overflow:hidden;position:relative}.flicking-camera{-ms-flex-direction:row;-webkit-box-direction:normal;-webkit-box-orient:horizontal;display:-webkit-box;display:-ms-flexbox;display:flex;flex-direction:row;height:100%;position:relative;width:100%;z-index:1}.flicking-camera>*{-ms-flex-negative:0;flex-shrink:0}.flicking-viewport.vertical,.flicking-viewport.vertical>.flicking-camera{display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex}.flicking-viewport.vertical>.flicking-camera{-ms-flex-direction:column;-webkit-box-direction:normal;-webkit-box-orient:vertical;flex-direction:column}.flicking-viewport.flicking-hidden .flicking-camera>*{visibility:hidden}\n/*# sourceMappingURL=flicking.css.map */"]
                },] }
    ];
    NgxFlickingComponent.ctorParameters = function () { return [
        { type: core.ElementRef },
        { type: core.Renderer2 },
        { type: undefined, decorators: [{ type: core.Inject, args: [core.PLATFORM_ID,] }] }
    ]; };
    NgxFlickingComponent.propDecorators = {
        options: [{ type: core.Input }],
        plugins: [{ type: core.Input }],
        status: [{ type: core.Input }],
        hideBeforeInit: [{ type: core.Input }],
        firstPanelSize: [{ type: core.Input }],
        ready: [{ type: core.Output }],
        beforeResize: [{ type: core.Output }],
        afterResize: [{ type: core.Output }],
        holdStart: [{ type: core.Output }],
        holdEnd: [{ type: core.Output }],
        moveStart: [{ type: core.Output }],
        move: [{ type: core.Output }],
        moveEnd: [{ type: core.Output }],
        willChange: [{ type: core.Output }],
        changed: [{ type: core.Output }],
        willRestore: [{ type: core.Output }],
        restored: [{ type: core.Output }],
        select: [{ type: core.Output }],
        needPanel: [{ type: core.Output }],
        visibleChange: [{ type: core.Output }],
        reachEdge: [{ type: core.Output }],
        panelChange: [{ type: core.Output }],
        isVertical: [{ type: core.HostBinding, args: ["class.vertical",] }],
        isHiddenBeforeInit: [{ type: core.HostBinding, args: ["class.flicking-hidden",] }],
        _ngxPanels: [{ type: core.ContentChildren, args: [NgxFlickingPanel,] }]
    };

    var NgxFlickingModule = /** @class */ (function () {
        function NgxFlickingModule() {
        }
        return NgxFlickingModule;
    }());
    NgxFlickingModule.decorators = [
        { type: core.NgModule, args: [{
                    declarations: [NgxFlickingComponent, NgxFlickingPanel],
                    imports: [common.CommonModule],
                    exports: [NgxFlickingComponent, NgxFlickingPanel]
                },] }
    ];

    /*
     * Public API Surface of ngx-flicking
     */

    /**
     * Generated bundle index. Do not edit.
     */

    Object.keys(VanillaFlicking).forEach(function (k) {
        if (k !== 'default') Object.defineProperty(exports, k, {
            enumerable: true,
            get: function () {
                return VanillaFlicking[k];
            }
        });
    });
    exports.NgxFlickingComponent = NgxFlickingComponent;
    exports.NgxFlickingModule = NgxFlickingModule;
    exports.NgxFlickingPanel = NgxFlickingPanel;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=egjs-ngx-flicking.umd.js.map
