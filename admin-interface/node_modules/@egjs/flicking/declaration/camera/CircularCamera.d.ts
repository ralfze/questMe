import Panel from "../core/panel/Panel";
import AnchorPoint from "../core/AnchorPoint";
import { DIRECTION } from "../const/external";
import { ValueOf } from "../type/internal";
import Camera from "./Camera";
export interface TogglePoint {
    panel: Panel;
    direction: ValueOf<typeof DIRECTION>;
    toggled: boolean;
}
declare class CircularCamera extends Camera {
    private _circularOffset;
    private _circularEnabled;
    get offset(): number;
    get controlParams(): {
        range: {
            min: number;
            max: number;
        };
        position: number;
        circular: boolean;
    };
    getPrevAnchor(anchor: AnchorPoint): AnchorPoint | null;
    getNextAnchor(anchor: AnchorPoint): AnchorPoint | null;
    findAnchorIncludePosition(position: number): AnchorPoint | null;
    clampToReachablePosition(position: number): number;
    canReach(panel: Panel): boolean;
    canSee(panel: Panel): boolean;
    updateRange(): this;
    updateOffset(): this;
    lookAt(pos: number): void;
    applyTransform(): this;
    protected _resetInternalValues(): void;
    private _calcPanelAreaSum;
    private _updateCircularOffset;
}
export default CircularCamera;
