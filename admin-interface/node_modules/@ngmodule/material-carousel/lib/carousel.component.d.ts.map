{"version":3,"file":"carousel.component.d.ts","sources":["carousel.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { AnimationBuilder } from '@angular/animations';\nimport { ListKeyManager } from '@angular/cdk/a11y';\nimport { AfterContentInit, AfterViewInit, EventEmitter, OnDestroy, QueryList, Renderer2 } from '@angular/core';\nimport { ThemePalette } from '@angular/material/core';\nimport { MatCarousel, Orientation, SvgIconOverrides } from './carousel';\nimport { MatCarouselSlideComponent } from './carousel-slide/carousel-slide.component';\nexport declare class MatCarouselComponent implements AfterContentInit, AfterViewInit, MatCarousel, OnDestroy {\n    private animationBuilder;\n    private renderer;\n    private platformId;\n    timings: string;\n    svgIconOverrides: SvgIconOverrides;\n    autoplay: boolean;\n    interval: number;\n    loop: boolean;\n    hideArrows: boolean;\n    hideIndicators: boolean;\n    color: ThemePalette;\n    maxWidth: string;\n    maintainAspectRatio: boolean;\n    proportion: number;\n    slideHeight: string;\n    slides: number;\n    useKeyboard: boolean;\n    useMouseWheel: boolean;\n    orientation: Orientation;\n    change: EventEmitter<number>;\n    readonly currentIndex: number;\n    readonly currentSlide: MatCarouselSlideComponent;\n    slidesList: QueryList<MatCarouselSlideComponent>;\n    private carouselContainer;\n    private carouselList;\n    listKeyManager: ListKeyManager<MatCarouselSlideComponent>;\n    private _autoplay;\n    private autoplay$;\n    private interval$;\n    private slides$;\n    private _maxWidth;\n    private maxWidth$;\n    private _loop;\n    private loop$;\n    private _orientation;\n    private orientation$;\n    private timer$;\n    private timerStop$;\n    private destroy$;\n    private playing;\n    constructor(animationBuilder: AnimationBuilder, renderer: Renderer2, platformId: any);\n    ngAfterContentInit(): void;\n    ngAfterViewInit(): void;\n    ngOnDestroy(): void;\n    next(): void;\n    previous(): void;\n    slideTo(index: number): void;\n    onKeyUp(event: KeyboardEvent): void;\n    onMouseEnter(): void;\n    onMouseLeave(): void;\n    onMouseWheel(event: MouseWheelEvent): void;\n    onResize(event: Event): void;\n    onPan(event: any, slideElem: HTMLElement): void;\n    onPanEnd(event: any, slideElem: HTMLElement): void;\n    private isOutOfBounds;\n    private isVisible;\n    private getOffset;\n    private getTranslation;\n    private getWidth;\n    private goto;\n    private playAnimation;\n    private resetSlides;\n    private resetTimer;\n    private startTimer;\n    private stopTimer;\n}\n"]}